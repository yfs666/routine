package com.routine.java.concurreny4;

/**
 * volatile 主要有三个作用
 * 1、实现long/double类型变量的原子操作
 * 2、防止指令重排序
 * 3、实现变量的可变性
 *
 * 当变量被volatile修饰时，应用就不会从寄存器中读取该变量的值，而是从内存（高速缓存中）获取
 *
 * volatile与锁类似的地方有两点
 * 1、保证变量的内存可见性
 * 2、防止指令重排序
 *
 * volatile可以确保对变量写的原子性，但是不具备排他性
 * 另外一个重要的点在于，使用锁可能会导致线程的上下文切换（内核态与用户态之间的切换），但是用volatile并不会出现这种情况
 *
 * 如果要实现volatile写操作的原子性，那么在等号右侧赋值变量中就不能出现被多线程共享的变量，哪怕这个变量也是被volatile修饰也不行。
 */
public class MyTest3 {
}
